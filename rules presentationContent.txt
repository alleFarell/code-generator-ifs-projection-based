rules:

- id should be the "Id" from json but in lower snake case
- label should get from json "Label", if the "Label" in json is null, then just take the "Id" as the label
- type should be FieldTypeEnum::{{Type}} , get Type from json with mapping. (The mapping rules mentioned below)
- inputType should be FieldTypeEnum::{{Type}} , get Type from with mapping. (The mapping rules mentioned below)
- length should get from json "Length" only if Type is string. otherwise, take 100 as the default value for length.
- primaryKey should get from json "PrimaryKey" (in boolean)
- mandatory should get from json "Mandatory" (in boolean)
- insertable should get from json "Insertable" (in boolean)
- updateable should get from json "Updateable" (in boolean)
- presentation should hardcode true (in boolean)
- hidden should hardcode false (in boolean)
- visible hardcode true (in boolean)
- detail hardcode true (in boolean)
- onchange hardcode false (in boolean)
- onchangeLookup hardcode null
- lov hardcode false (in boolean)
- lovDetail hardcode "" (empty string)
- referenceController => null
- referenceService => null
- referencePres => null
- iid => false
- staticIidEnum => null
- uploader => false
- downloader => false
- thousandSeparator => false
- decimalPrecision => 2
- internalZoomContent => null
- externalZoomContent => null



type and inputType Mapping:

example
"json Type":"Field Type Enum"

here is the list:

"STRING" : "STRING",
"NUMBER" : "NUMBER",
"BOOLEAN" : "BOOLEAN",	
"DATE/DATE" : "DATE",
"DATE/DATETIME" : "DATETIME"



NUMBER(10)
"Type": "BOOLEAN(\"TRUE\",\"FALSE\")"
"Type": "NUMBER(1)"
DATE/DATETIME
DATE/DATE

